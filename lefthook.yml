pre-commit:
  parallel: true
  commands:
    # Rust フォーマット
    rust-fmt:
      glob: 'backend/**/*.rs'
      run: cd backend && cargo fmt
      stage_fixed: true

    # Rust リンター
    rust-clippy:
      glob: 'backend/**/*.rs'
      run: cd backend && cargo clippy -- -D warnings

    # フロントエンド フォーマット
    frontend-format:
      glob: 'frontend/**/*.{js,ts,svelte,json,css,md}'
      run: cd frontend && npx prettier --write {staged_files}
      stage_fixed: true

    # フロントエンド リンター
    frontend-lint:
      glob: 'frontend/**/*.{js,ts,svelte}'
      run: cd frontend && npx eslint --fix {staged_files}
      stage_fixed: true

    # ルートレベルファイル フォーマット
    root-format:
      glob: '*.{js,ts,json,md,yaml,yml}'
      run: npx prettier --write {staged_files}
      stage_fixed: true

pre-push:
  commands:
    # プッシュ前のテスト実行
    backend-test:
      run: cd backend && cargo test

    frontend-test:
      run: cd frontend && npm run test

commit-msg:
  commands:
    # コミットメッセージの検証（オプション）
    commitlint:
      run: echo "Commit message validation passed"
